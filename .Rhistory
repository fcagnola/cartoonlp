title<- matrix[i, "movie"]
date<- matrix[i, "date"]
row <- MALLET_values[match(title,MALLET_values$Title), ]
w <- row$T13
if (matrix[i, "Topic13"] ==1){movies<- c(movies, title)
dates<- c(dates, date)
t_weight<- c(t_weight, w)}
}
cluster_T13 <-data.frame(movies, dates, t_weight)
paged_table(cluster_T13)
movies <- c()
dates <-c()
t_weight<-c()
for (i in rownames(matrix)) {
title<- matrix[i, "movie"]
date<- matrix[i, "date"]
row <- MALLET_values[match(title,MALLET_values$Title), ]
w <- row$T13
if (matrix[i, "Topic13"] ==1){movies<- c(movies, title)
dates<- c(dates, date)
t_weight<- c(t_weight, w)}
}
cluster_T13 <-data.frame(movies, dates, t_weight)
paged_table(cluster_T13)
movies <- c()
dates <-c()
t_weight<-c()
for (i in rownames(matrix)) {
title<- matrix[i, "movie"]
date<- matrix[i, "date"]
row <- MALLET_values[match(title,MALLET_values$Title), ]
w <- row$T14
if (matrix[i, "Topic14"] ==1){movies<- c(movies, title)
dates<- c(dates, date)
t_weight<- c(t_weight, w)}
}
cluster_T14 <-data.frame(movies, dates, t_weight)
paged_table(cluster_T14)
movies <- c()
dates <-c()
t_weight<-c()
for (i in rownames(matrix)) {
title<- matrix[i, "movie"]
date<- matrix[i, "date"]
row <- MALLET_values[match(title,MALLET_values$Title), ]
w <- row$T15
if (matrix[i, "Topic15"] ==1){movies<- c(movies, title)
dates<- c(dates, date)
t_weight<- c(t_weight, w)}
}
cluster_T15 <-data.frame(movies, dates, t_weight)
paged_table(cluster_T15)
library(syuzhet) #enables Syuzhet package for the sentiment analysis
df <- read.csv(url("https://raw.githubusercontent.com/fcagnola/cartoonlp/main/03_out_dataframe.csv"))
paged_table(head(df))
texts_df<- df[, c("X", "Year", "Text")]
texts_df<- texts_df %>% rename(Title= X)
texts_df <- texts_df %>% arrange(Year)
for( i in rownames(texts_df) ){
string <- texts_df[i, "Text"]
count <- lengths(gregexpr("\\W+", string)) + 1
texts_df[i, "Lenght"] = count
}
text1 = "Sleeping_Beauty"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "The_Sword_in_the_Stone"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Tangled"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
text1 = "Sleeping_Beauty"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "The_Sword_in_the_Stone"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Tangled"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
#normalization for comparison
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
legend(70, 1, legend=c(text1, text2, text3),
col=c("seagreen", "rosybrown", "steelblue"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Peter_Pan"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "The_Rescuers"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Treasure_Planet"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
text4= "The_Rescuers_Down_Under"
row_4 <- texts_df [match(text4, texts_df $Title ),]
string_4 <- row_4$Text
#syuzhet vectors creation
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
v_4 <- get_sentences(string_4)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
sv_4<- get_sentiment(v_4, method="syuzhet")
#normalization for comparison
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
x4 <- 1:length(sv_4)
y4 <- sv_4
raw_4 <- loess(y4 ~ x4, span=.5)
line4 <- rescale(predict(raw_4))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
sample_4 <- seq(1, length(line4), by=round(length(line4)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
lines(line4[sample_4], col="indianred")
legend(5, -0.6, legend=c(text1, text2, text3, text4),
col=c("seagreen", "rosybrown", "steelblue", "indianred"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
paged_table(texts_df)
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
legend(70, 1, legend=c(text1, text2, text3),
col=c("seagreen", "rosybrown", "steelblue"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
paged_table(cluster_T1)
text1 = "Peter_Pan"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "The_Rescuers"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Treasure_Planet"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
text4= "The_Rescuers_Down_Under"
row_4 <- texts_df [match(text4, texts_df $Title ),]
string_4 <- row_4$Text
#syuzhet vectors creation
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
v_4 <- get_sentences(string_4)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
sv_4<- get_sentiment(v_4, method="syuzhet")
#normalization for comparison
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
x4 <- 1:length(sv_4)
y4 <- sv_4
raw_4 <- loess(y4 ~ x4, span=.5)
line4 <- rescale(predict(raw_4))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
sample_4 <- seq(1, length(line4), by=round(length(line4)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
lines(line4[sample_4], col="indianred")
legend(5, -0.6, legend=c(text1, text2, text3, text4),
col=c("seagreen", "rosybrown", "steelblue", "indianred"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Pocahontas"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Hercules"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Mulan"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
text4= "Tarzan"
row_4 <- texts_df [match(text4, texts_df $Title ),]
string_4 <- row_4$Text
#syuzhet vectors creation
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
v_4 <- get_sentences(string_4)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
sv_4<- get_sentiment(v_4, method="syuzhet")
#normalization for comparison
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
x4 <- 1:length(sv_4)
y4 <- sv_4
raw_4 <- loess(y4 ~ x4, span=.5)
line4 <- rescale(predict(raw_4))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
sample_4 <- seq(1, length(line4), by=round(length(line4)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
lines(line4[sample_4], col="black")
legend(65, 1, legend=c(text1, text2, text3, text4),
col=c("seagreen", "rosybrown", "steelblue", "black"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Tarzan"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Dinosaur"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Brother_Bear"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
text4= "Moana"
row_4 <- texts_df [match(text4, texts_df $Title ),]
string_4 <- row_4$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
v_4 <- get_sentences(string_4)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
sv_4<- get_sentiment(v_4, method="syuzhet")
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
x4 <- 1:length(sv_4)
y4 <- sv_4
raw_4 <- loess(y4 ~ x4, span=.5)
line4 <- rescale(predict(raw_4))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
sample_4 <- seq(1, length(line4), by=round(length(line4)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
lines(line4[sample_4], col="black")
legend(65, 1, legend=c(text1, text2, text3, text4),
col=c("seagreen", "rosybrown", "steelblue",  "black"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Meet_the_Robinsons"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Big_Hero_6"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
legend(0, 1, legend=c(text1, text2),
col=c("seagreen", "rosybrown"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Bambi"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Make_Mine_Music"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Cinderella"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
legend(20, 1, legend=c(text1, text2, text3),
col=c("seagreen", "rosybrown", "steelblue"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "Alice_in_Wonderland"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Beauty_and_the_Beast"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
#syuzhet vectors creation
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
#roll
wdw_1 <- round(length(sv_1)*.1)
rolled_1 <- zoo::rollmean(sv_1, k=wdw_1)
wdw_2 <- round(length(sv_2)*.1)
rolled_2 <- zoo::rollmean(sv_2, k=wdw_2)
list_1 <- rescale_x_2(rolled_1)
list_2 <- rescale_x_2(rolled_2)
sample_1 <- seq(1, length(list_1$x), by=round(length(list_1$x)/100))
sample_2 <- seq(1, length(list_2$x), by=round(length(list_2$x)/100))
#normalization for comparison
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
legend(75, 1, legend=c(text1, text2),
col=c("seagreen", "rosybrown"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
text1 = "The_Princess_and_the_Frog"
row_1 <- texts_df [match(text1, texts_df $Title ),]
string_1<- row_1$Text
text2 = "Frozen"
row_2 <- texts_df [match(text2, texts_df $Title ),]
string_2 <- row_2$Text
text3= "Raya_and_the_Last_Dragon"
row_3 <- texts_df [match(text3, texts_df $Title ),]
string_3 <- row_3$Text
v_1<- get_sentences(string_1)
v_2 <- get_sentences(string_2)
v_3 <- get_sentences(string_3)
sv_1<- get_sentiment(v_1, method="syuzhet")
sv_2<- get_sentiment(v_2, method="syuzhet")
sv_3<- get_sentiment(v_3, method="syuzhet")
x1 <- 1:length(sv_1)
y1 <- sv_1
raw_1 <- loess(y1 ~ x1, span=.5)
line1 <- rescale(predict(raw_1))
x2 <- 1:length(sv_2)
y2 <- sv_2
raw_2 <- loess(y2 ~ x2, span=.5)
line2 <- rescale(predict(raw_2))
x3 <- 1:length(sv_3)
y3 <- sv_3
raw_3 <- loess(y3 ~ x3, span=.5)
line3 <- rescale(predict(raw_3))
sample_1 <- seq(1, length(line1), by=round(length(line1)/100))
sample_2 <- seq(1, length(line2), by=round(length(line2)/100))
sample_3 <- seq(1, length(line3), by=round(length(line3)/100))
plot(line1[sample_1],
type="l",
col="seagreen",
xlab="Narrative Time (sampled)",
ylab="Emotional Valence"
)
lines(line2[sample_2], col="rosybrown")
lines(line3[sample_3], col="steelblue")
legend(70, 1, legend=c(text1, text2, text3),
col=c("seagreen", "rosybrown", "steelblue"), lty=1:1, cex=0.5,
title="Movies", text.font=4, bg='white')
library(knitr)
library(dplyr)
library(ggplot2)
library(rmarkdown) #paged_table() function
mallet_keys <- read.csv("/Users/chiara/Desktop/final_file/mallet_keys.csv")
library(knitr)
library(dplyr)
library(ggplot2)
library(rmarkdown) #paged_table() function
mallet_keys <- read.csv("/Users/chiara/Desktop/cartoonlp/final_file/mallet_keys.csv")
mallet_values <- read.csv("/Users/chiara/Desktop/cartoonlp/final_file/mallet_values.csv")
paged_table(head(mallet_values))
